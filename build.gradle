buildscript {
	ext { springBootVersion = '1.2.5.RELEASE' }
	repositories { mavenCentral() }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
	}
}

allprojects { group = "com.haws.projects" }

ext {
	javaprojects = subprojects.findAll { project -> (project.name != 'services' && project.name != 'connectors') }
	simpleprojects = javaprojects.findAll { project -> (project.name =~ 'common' || project.name =~ 'shared') }
	bootprojects = javaprojects - simpleprojects
}

configure(javaprojects) {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'spring-boot'
	apply plugin: 'io.spring.dependency-management'

	bootRepackage {  enabled = false  }

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		mavenLocal()
		maven { url 'http://maven.springframework.org/milestone/' }
		maven { url 'http://repo.spring.io/libs-milestone' }
		maven { url 'http://repo.spring.io/snapshot' }
	}

	configurations.all {
		// replaced with jcl-over-slf4j
		all*.exclude group: 'commons-logging', module: 'commons-logging'
		// replaced with log4j-over-slf4j
//		all*.exclude group: 'log4j', module: 'log4j'
//		all*.exclude module: 'log4j-over-slf4j'
	}

	dependencyManagement { imports { mavenBom 'org.springframework.cloud:spring-cloud-aws:1.0.2.RELEASE' } }

	dependencies {
		compile("org.springframework.boot:spring-boot-starter")
		
		testCompile("org.springframework.boot:spring-boot-starter-test")
	}

	if (JavaVersion.current().isJava8Compatible()) {
		allprojects {
			tasks.withType(Javadoc) {
				options.addStringOption('Xdoclint:none', '-quiet')
			}
		}
	}

	eclipse {
		classpath {
			containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
			containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
		}
	}
}

println "Using Spring Boot version: [$springBootVersion]"
println "Using Java version: [" + System.getProperty("java.version") + "]"

task wrapper(type: Wrapper) { gradleVersion = '2.3' }
